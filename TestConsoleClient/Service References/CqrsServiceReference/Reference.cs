//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsoleClient.CqrsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemEntity", Namespace="http://schemas.datacontract.org/2004/07/Server.Contracts.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsoleClient.CqrsServiceReference.Node))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsoleClient.CqrsServiceReference.Executable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsoleClient.CqrsServiceReference.Dispatcher))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsoleClient.CqrsServiceReference.Dispatchable))]
    public partial class SystemEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ParentSystemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ParentSystemId {
            get {
                return this.ParentSystemIdField;
            }
            set {
                if ((this.ParentSystemIdField.Equals(value) != true)) {
                    this.ParentSystemIdField = value;
                    this.RaisePropertyChanged("ParentSystemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Node", Namespace="http://schemas.datacontract.org/2004/07/Server.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class Node : TestConsoleClient.CqrsServiceReference.SystemEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ExecutablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] DispatchersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] Executables {
            get {
                return this.ExecutablesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutablesField, value) != true)) {
                    this.ExecutablesField = value;
                    this.RaisePropertyChanged("Executables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long[] Dispatchers {
            get {
                return this.DispatchersField;
            }
            set {
                if ((object.ReferenceEquals(this.DispatchersField, value) != true)) {
                    this.DispatchersField = value;
                    this.RaisePropertyChanged("Dispatchers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Executable", Namespace="http://schemas.datacontract.org/2004/07/Server.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class Executable : TestConsoleClient.CqrsServiceReference.SystemEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Node {
            get {
                return this.NodeField;
            }
            set {
                if ((this.NodeField.Equals(value) != true)) {
                    this.NodeField = value;
                    this.RaisePropertyChanged("Node");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dispatcher", Namespace="http://schemas.datacontract.org/2004/07/Server.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class Dispatcher : TestConsoleClient.CqrsServiceReference.SystemEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] DispatchablesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Node {
            get {
                return this.NodeField;
            }
            set {
                if ((this.NodeField.Equals(value) != true)) {
                    this.NodeField = value;
                    this.RaisePropertyChanged("Node");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long[] Dispatchables {
            get {
                return this.DispatchablesField;
            }
            set {
                if ((object.ReferenceEquals(this.DispatchablesField, value) != true)) {
                    this.DispatchablesField = value;
                    this.RaisePropertyChanged("Dispatchables");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dispatchable", Namespace="http://schemas.datacontract.org/2004/07/Server.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class Dispatchable : TestConsoleClient.CqrsServiceReference.SystemEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DispatcherField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Dispatcher {
            get {
                return this.DispatcherField;
            }
            set {
                if ((this.DispatcherField.Equals(value) != true)) {
                    this.DispatcherField = value;
                    this.RaisePropertyChanged("Dispatcher");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SplAsset", Namespace="http://schemas.datacontract.org/2004/07/Server.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class SplAsset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElementNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ElementId {
            get {
                return this.ElementIdField;
            }
            set {
                if ((this.ElementIdField.Equals(value) != true)) {
                    this.ElementIdField = value;
                    this.RaisePropertyChanged("ElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElementName {
            get {
                return this.ElementNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementNameField, value) != true)) {
                    this.ElementNameField = value;
                    this.RaisePropertyChanged("ElementName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElementType {
            get {
                return this.ElementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementTypeField, value) != true)) {
                    this.ElementTypeField = value;
                    this.RaisePropertyChanged("ElementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string AssetName {
            get {
                return this.AssetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetNameField, value) != true)) {
                    this.AssetNameField = value;
                    this.RaisePropertyChanged("AssetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainModelDto", Namespace="http://schemas.datacontract.org/2004/07/Server.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class DomainModelDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DomainModelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReadModelIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Guid DomainModelId {
            get {
                return this.DomainModelIdField;
            }
            set {
                if ((this.DomainModelIdField.Equals(value) != true)) {
                    this.DomainModelIdField = value;
                    this.RaisePropertyChanged("DomainModelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ReadModelId {
            get {
                return this.ReadModelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadModelIdField, value) != true)) {
                    this.ReadModelIdField = value;
                    this.RaisePropertyChanged("ReadModelId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pong", Namespace="http://schemas.datacontract.org/2004/07/Server.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class Pong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CqrsServiceReference.ICqrsService")]
    public interface ICqrsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/SetName", ReplyAction="http://tempuri.org/ICqrsService/SetNameResponse")]
        void SetName(System.Guid id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/RemoveSystemElement", ReplyAction="http://tempuri.org/ICqrsService/RemoveSystemElementResponse")]
        void RemoveSystemElement(System.Guid id, long elementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AddSystem", ReplyAction="http://tempuri.org/ICqrsService/AddSystemResponse")]
        long AddSystem(System.Guid id, string name, long parentSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AddNode", ReplyAction="http://tempuri.org/ICqrsService/AddNodeResponse")]
        long AddNode(System.Guid id, string name, long parentSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AddExecutable", ReplyAction="http://tempuri.org/ICqrsService/AddExecutableResponse")]
        long AddExecutable(System.Guid id, string name, long parentSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AssignExecutableToNode", ReplyAction="http://tempuri.org/ICqrsService/AssignExecutableToNodeResponse")]
        void AssignExecutableToNode(System.Guid id, long executableId, long nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AddDispatcher", ReplyAction="http://tempuri.org/ICqrsService/AddDispatcherResponse")]
        long AddDispatcher(System.Guid id, string name, long nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AssignDispatcherToNode", ReplyAction="http://tempuri.org/ICqrsService/AssignDispatcherToNodeResponse")]
        void AssignDispatcherToNode(System.Guid id, long dispatcherId, long nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AddDispatchable", ReplyAction="http://tempuri.org/ICqrsService/AddDispatchableResponse")]
        long AddDispatchable(System.Guid id, string name, long parentSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AddOtherSplElement", ReplyAction="http://tempuri.org/ICqrsService/AddOtherSplElementResponse")]
        long AddOtherSplElement(System.Guid id, string name, string type, long parentSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AssignDispatchableToDispatcher", ReplyAction="http://tempuri.org/ICqrsService/AssignDispatchableToDispatcherResponse")]
        void AssignDispatchableToDispatcher(System.Guid id, long dispatchableId, long dispatcherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/CommitVersion", ReplyAction="http://tempuri.org/ICqrsService/CommitVersionResponse")]
        void CommitVersion(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/AssignSplAsset", ReplyAction="http://tempuri.org/ICqrsService/AssignSplAssetResponse")]
        void AssignSplAsset(System.Guid id, long splElementId, string assetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/GetName", ReplyAction="http://tempuri.org/ICqrsService/GetNameResponse")]
        string GetName(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/GetSystems", ReplyAction="http://tempuri.org/ICqrsService/GetSystemsResponse")]
        TestConsoleClient.CqrsServiceReference.SystemEntity[] GetSystems(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/GetNodes", ReplyAction="http://tempuri.org/ICqrsService/GetNodesResponse")]
        TestConsoleClient.CqrsServiceReference.Node[] GetNodes(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/GetExecutables", ReplyAction="http://tempuri.org/ICqrsService/GetExecutablesResponse")]
        TestConsoleClient.CqrsServiceReference.Executable[] GetExecutables(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/GetDispatchers", ReplyAction="http://tempuri.org/ICqrsService/GetDispatchersResponse")]
        TestConsoleClient.CqrsServiceReference.Dispatcher[] GetDispatchers(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/GetDispatchables", ReplyAction="http://tempuri.org/ICqrsService/GetDispatchablesResponse")]
        TestConsoleClient.CqrsServiceReference.Dispatchable[] GetDispatchables(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/GetSplAssets", ReplyAction="http://tempuri.org/ICqrsService/GetSplAssetsResponse")]
        TestConsoleClient.CqrsServiceReference.SplAsset[] GetSplAssets(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/GetList", ReplyAction="http://tempuri.org/ICqrsService/GetListResponse")]
        TestConsoleClient.CqrsServiceReference.DomainModelDto[] GetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/GetPublishedList", ReplyAction="http://tempuri.org/ICqrsService/GetPublishedListResponse")]
        TestConsoleClient.CqrsServiceReference.DomainModelDto[] GetPublishedList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/ReloadFromEvents", ReplyAction="http://tempuri.org/ICqrsService/ReloadFromEventsResponse")]
        void ReloadFromEvents(System.Uri uri, System.DateTime lastEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICqrsService/Ping", ReplyAction="http://tempuri.org/ICqrsService/PingResponse")]
        TestConsoleClient.CqrsServiceReference.Pong Ping(System.Uri sender);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICqrsServiceChannel : TestConsoleClient.CqrsServiceReference.ICqrsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CqrsServiceClient : System.ServiceModel.ClientBase<TestConsoleClient.CqrsServiceReference.ICqrsService>, TestConsoleClient.CqrsServiceReference.ICqrsService {
        
        public CqrsServiceClient() {
        }
        
        public CqrsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CqrsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CqrsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CqrsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetName(System.Guid id, string name) {
            base.Channel.SetName(id, name);
        }
        
        public void RemoveSystemElement(System.Guid id, long elementId) {
            base.Channel.RemoveSystemElement(id, elementId);
        }
        
        public long AddSystem(System.Guid id, string name, long parentSystemId) {
            return base.Channel.AddSystem(id, name, parentSystemId);
        }
        
        public long AddNode(System.Guid id, string name, long parentSystemId) {
            return base.Channel.AddNode(id, name, parentSystemId);
        }
        
        public long AddExecutable(System.Guid id, string name, long parentSystemId) {
            return base.Channel.AddExecutable(id, name, parentSystemId);
        }
        
        public void AssignExecutableToNode(System.Guid id, long executableId, long nodeId) {
            base.Channel.AssignExecutableToNode(id, executableId, nodeId);
        }
        
        public long AddDispatcher(System.Guid id, string name, long nodeId) {
            return base.Channel.AddDispatcher(id, name, nodeId);
        }
        
        public void AssignDispatcherToNode(System.Guid id, long dispatcherId, long nodeId) {
            base.Channel.AssignDispatcherToNode(id, dispatcherId, nodeId);
        }
        
        public long AddDispatchable(System.Guid id, string name, long parentSystemId) {
            return base.Channel.AddDispatchable(id, name, parentSystemId);
        }
        
        public long AddOtherSplElement(System.Guid id, string name, string type, long parentSystemId) {
            return base.Channel.AddOtherSplElement(id, name, type, parentSystemId);
        }
        
        public void AssignDispatchableToDispatcher(System.Guid id, long dispatchableId, long dispatcherId) {
            base.Channel.AssignDispatchableToDispatcher(id, dispatchableId, dispatcherId);
        }
        
        public void CommitVersion(System.Guid id) {
            base.Channel.CommitVersion(id);
        }
        
        public void AssignSplAsset(System.Guid id, long splElementId, string assetName) {
            base.Channel.AssignSplAsset(id, splElementId, assetName);
        }
        
        public string GetName(System.Guid id) {
            return base.Channel.GetName(id);
        }
        
        public TestConsoleClient.CqrsServiceReference.SystemEntity[] GetSystems(System.Guid id) {
            return base.Channel.GetSystems(id);
        }
        
        public TestConsoleClient.CqrsServiceReference.Node[] GetNodes(System.Guid id) {
            return base.Channel.GetNodes(id);
        }
        
        public TestConsoleClient.CqrsServiceReference.Executable[] GetExecutables(System.Guid id) {
            return base.Channel.GetExecutables(id);
        }
        
        public TestConsoleClient.CqrsServiceReference.Dispatcher[] GetDispatchers(System.Guid id) {
            return base.Channel.GetDispatchers(id);
        }
        
        public TestConsoleClient.CqrsServiceReference.Dispatchable[] GetDispatchables(System.Guid id) {
            return base.Channel.GetDispatchables(id);
        }
        
        public TestConsoleClient.CqrsServiceReference.SplAsset[] GetSplAssets(System.Guid id) {
            return base.Channel.GetSplAssets(id);
        }
        
        public TestConsoleClient.CqrsServiceReference.DomainModelDto[] GetList() {
            return base.Channel.GetList();
        }
        
        public TestConsoleClient.CqrsServiceReference.DomainModelDto[] GetPublishedList() {
            return base.Channel.GetPublishedList();
        }
        
        public void ReloadFromEvents(System.Uri uri, System.DateTime lastEvent) {
            base.Channel.ReloadFromEvents(uri, lastEvent);
        }
        
        public TestConsoleClient.CqrsServiceReference.Pong Ping(System.Uri sender) {
            return base.Channel.Ping(sender);
        }
    }
}
